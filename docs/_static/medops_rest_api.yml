openapi: "3.0.0"
info:
  description: "This document provides the specification for the HTTP api for the different services provided by the MedOps application for managing hospital data."
  version: "1.0.0"
  title: "MedOps"
  license:
    name: "MIT License"
    url: "https://mit-license.org/"
servers:
  - url: "https://api.fakeserver.com"
tags:
- name: "Devices"
  description: "Manage Medical Devices"
paths:
  /data:
    post:
      tags:
      - "Data"
      summary: "Post data from devices."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/Datum"
      responses:
        "201":
          description: "Content accepted"
        "422":
          description: |
            There was one or more errors due to malformed or missing
            data.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error-UnprocessableEntity"
  /devices:
    get:
      summary: |
        Query for devices in the system. Currently this function only
        has the ability to list all devices in the system.
      tags:
      - "Devices"
      responses:
        "200":
          description: "Query successful"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  devices:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/Device-Read"
                  count:
                    type: "integer"
    post:
      tags:
      - "Devices"
      summary: "Add a new device to the system."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Device-Create"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device-Read"
        "400":
          description: "Invalid content-type or malform body."
          content:
            text/plain:
              schema:
                type: "string"
        "422":
          description: "Unprocessable Entity. The request was parsed but the data in the request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error-UnprocessableEntity"
  /devices/{device_id}:
    parameters:
      - name: device_id
        in: path
        description: The ID of the device to read.
        required: true
        schema:
          type: "integer"
    get:
      summary: "Get information about a specific device."
      tags:
      - "Devices"
      responses:
        "200":
          description: "Ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device-Read"
        "404":
          description: "Device not found"
    put:
      summary: "Update an existing device"
      tags:
      - "Devices"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Device-Update"
      responses:
        "200":
          description: "Ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device-Read"
    delete:
      summary: "Delete a device from the system."
      tags:
      - "Devices"
      responses:
        "405":
          description: "Not allowed. Devices can't be deleted once they have been used to collect data."
        "200":
          description: "Device deleted successfully."

  /messages:
    post:
      summary: "Send a message to other users."
      tags:
      - "Messages"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageCreate"
      responses:
        "200":
          description: "Ok"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageV1-Read"
        "404":
          description: "The sender or one of the recepients does not exist."
        "422":
          description: |
            There was one or more errors due to malformed or missing
            data.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error-UnprocessableEntity"
  /messages/query:
    post:
      summary: "Query for message logs"
      tags:
      - "Messages"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageQuery"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      $ref: "#/components/schemas/MessageV1-Read"
                  count:
                    type: integer
        "422":
          description: |
            There was one or more errors due to a malformed query.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error-UnprocessableEntity"
components:
  schemas:
    Device-Create:
      allOf:
        - $ref: "#/components/schemas/Device-Update"
    Device-Read:
      allOf:
        - $ref: "#/components/schemas/Device-Update"
        - type: "object"
          properties:
            device_id:
              type: "integer"
    Device-Update:
      type: "object"
      description: "When updating an existing device, the following fields may be passed. If a field is omitted, the model will be partially updated with the data provided. The device_id fiels is omitted here as it can't be updated once the device is created. However if passed in the request body, its value will be ignored."
      properties:
        name:
          type: "string"
          description: "The descriptive name of the device."
        date_of_purchase:
          type: string
          nullable: true
        serial_number:
          type: string
          nullable: true
        mac_address:
          type: string
          nullable: true
        current_firmware_version:
          type: string
          description: "A string indicating the current firmware version running on the device."
    Error-UnprocessableEntity:
      type: "object"
      properties:
        errors:
          type: "array"
          items:
            type: "string"
        count:
          type: "integer"
    TemperatureDatum:
      type: "object"
      properties:
        deg_c:
          type: number
          format: float
    BloodPressureDatum:
      type: "object"
      properties:
        systolic:
          type: number
          format: float
        diastolic:
          type: number
          format: float
    GlucoseLevelDatum:
      type: "object"
      properties:
        mg_dl:
          type: integer
          minimum: 0
    HeartRateDatum:
      type: "object"
      properties:
        bpm:
          type: integer
          minimum: 0
    WeightDatum:
      type: "object"
      properties:
        grams:
          type: integer
          minimum: 0
    BloodSaturationDatum:
      type: "object"
      properties:
        percentage:
          type: number
          format: float
          minimum: 0
    Datum:
      type: "object"
      required:
        - "device_id"
        - "collection_time"
        - "data_type"
        - "data"
      properties:
        device_id:
          type: integer
          description: |
            The identifier of the device from which the data was
            collected.
        assigned_user:
          type: integer
          description: |
            The ID of the user from whom the data was collected. If
            this field is omitted and the device is actively assigned
            to a user, the data will logged with the actively assigned
            user ID. If this field is present, it will take precedence.
        collection_time:
          type: string
          format: date-time
          description: |
            The time which the data point was collected on the
            device in an ISO-8601 format.
        data_type:
          type: "string"
          description: |
            The type of data being logged. The data object within
            the request must match.
          enum:
          - "temperature"
          - "blood_pressure"
          - "oxygen_saturation"
          - "glucose_level"
          - "heart_rate"
          - "weight"
        data:
          description: |
            The value of the measurement. The schema for this data
            must match the `data_type` provided.
          oneOf:
            - $ref: "#/components/schemas/TemperatureDatum"
            - $ref: "#/components/schemas/BloodPressureDatum"
            - $ref: "#/components/schemas/GlucoseLevelDatum"
            - $ref: "#/components/schemas/HeartRateDatum"
            - $ref: "#/components/schemas/WeightDatum"
            - $ref: "#/components/schemas/BloodSaturationDatum"
    MessageAttachmentV1:
      type: object
      properties:
        type:
          type: string
        url:
          type: string
    MessageV1-Base:
      type: object
      properties:
        from_user:
          type: integer
          description: |
            The id of the user who sent the message.
        text:
          type: string
          description: |
            The text of the message
        attachments:
          type: array
          items:
            $ref: "#/components/schemas/MessageAttachmentV1"
    MessageV1-Read:
      allOf:
        - $ref: "#/components/schemas/MessageV1-Base"
        - type: object
          properties:
            timestamp:
              type: string
              format: date-time
            message_version:
              type: integer
              description: |
                Version number of the message schema
    MessageCreate:
      allOf:
        - $ref: "#/components/schemas/MessageV1-Base"
        - type: object
          properties:
            recepient_ids:
              type: array
              items:
                type: integer
    MessageQuery:
      type: object
      required:
        - "user_ids"
      properties:
        user_ids:
          description: |
            An array of user IDs
          type: array
          items:
            type: integer
        until:
          description: |
            The most recent date until which to query for messages.
          type: string
          format: date-time
        since:
          description: |
            The most historical date since which to query for messages.
          type: string
          format: date-time
        limit:
          type: integer
          minimum: 1
